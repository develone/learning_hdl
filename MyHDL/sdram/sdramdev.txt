################################################################################
##
## Filename: 	sram.txt
##
## Project:	ICO Zip, iCE40 ZipCPU demonsrtation project
##
## Purpose:	Describes how an HDL project needs to be patched to include the
##		SRAM device driver/controller.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2018, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=sdram
@DEVID=SDRAM
@$LGMEMSZ=24
@LGMEMSZ.FORMAT=%d
@$NADDR=(1<<(@$THIS.LGMEMSZ-2))
@$NBYTES=(1<<(@$THIS.LGMEMSZ))
@NBYTES.FORMAT=0x%08x
@ACCESS=@$(DEVID)_ACCESS
@SLAVE.TYPE=MEMORY
@SLAVE.BUS=wb
@LD.PERM=wx
@TOP.PORTLIST=

 

@TOP.IODECL=
input master_clk_i;
output sdram_clk_o;
wire sdram_clk_o;
input sdram_clk_i;
input pb_i;
input i_wb_cyc;
input i_wb_stb;
input i_wb_we;
input [31:0] i_wb_addr;
input [15:0] i_wb_data;
output o_wb_ack;
reg o_wb_ack;
output o_wb_stall;
reg o_wb_stall;
output [15:0] o_wb_data;
wire [15:0] o_wb_data;
input [3:0] i_wb_sel;
output SdramCntl0_0_sd_intf_cke;
reg SdramCntl0_0_sd_intf_cke;
output SdramCntl0_0_sd_intf_we;
reg SdramCntl0_0_sd_intf_we;
output [12:0] SdramCntl0_0_sd_intf_addr;
reg [12:0] SdramCntl0_0_sd_intf_addr;
output SdramCntl0_0_sd_intf_dqml;
reg SdramCntl0_0_sd_intf_dqml;
output SdramCntl0_0_sd_intf_cas;
reg SdramCntl0_0_sd_intf_cas;
output SdramCntl0_0_sd_intf_dqmh;
reg SdramCntl0_0_sd_intf_dqmh;
output SdramCntl0_0_sd_intf_ras;
reg SdramCntl0_0_sd_intf_ras;
output [1:0] SdramCntl0_0_sd_intf_bs;
reg [1:0] SdramCntl0_0_sd_intf_bs;
output SdramCntl0_0_sd_intf_cs;
reg SdramCntl0_0_sd_intf_cs;
inout [15:0] SdramCntl0_0_sd_intf_dq;
wire [15:0] SdramCntl0_0_sd_intf_dq;
output SdramCntl0_0_host_intf_wr_i;
wire SdramCntl0_0_host_intf_wr_i;
output SdramCntl0_0_host_intf_done_o;
wire SdramCntl0_0_host_intf_done_o;
output SdramCntl0_0_host_intf_rdPending_o;
wire SdramCntl0_0_host_intf_rdPending_o;
output sdramdevfsm0_0_host_intf_rst_i;
wire sdramdevfsm0_0_host_intf_rst_i;
output [15:0] SdramCntl0_0_host_intf_data_i;
wire [15:0] SdramCntl0_0_host_intf_data_i;
output [15:0] SdramCntl0_0_host_intf_data_o;
wire [15:0] SdramCntl0_0_host_intf_data_o;
output SdramCntl0_0_host_intf_rd_i;
wire SdramCntl0_0_host_intf_rd_i;
output [23:0] SdramCntl0_0_host_intf_addr_i;
wire [23:0] SdramCntl0_0_host_intf_addr_i;

reg pb_prev;
reg pb_debounced;
reg initialized;
reg [5:0] debounce_cntr;
wire clk;
wire clk100MHz;
wire reset;
reg [2:0] SdramCntl0_0_cmd_r;
reg [12:0] SdramCntl0_0_sAddr_x;
reg [2:0] SdramCntl0_0_cmd_x;
reg [1:0] SdramCntl0_0_activeBank_r;
reg [12:0] SdramCntl0_0_sAddr_r;
reg [15:0] SdramCntl0_0_sdramData_x;
reg SdramCntl0_0_activateInProgress_s;
reg SdramCntl0_0_sDataDir_x;
reg SdramCntl0_0_sDataDir_r;
wire [1:0] SdramCntl0_0_ba_x;
reg [4:0] SdramCntl0_0_rdPipeline_r;
wire [12:0] SdramCntl0_0_row_s;
reg [13:0] SdramCntl0_0_rfshCntr_x;
reg [1:0] SdramCntl0_0_ba_r;
reg [4:0] SdramCntl0_0_rdPipeline_x;
reg [13:0] SdramCntl0_0_rfshCntr_r;
reg [15:0] SdramCntl0_0_sDriver;
reg [1:0] SdramCntl0_0_activeBank_x;
reg SdramCntl0_0_doActivate_s;
wire [1:0] SdramCntl0_0_bank_s;
reg [8:0] SdramCntl0_0_refTimer_r;
reg SdramCntl0_0_rdInProgress_s;
reg [8:0] SdramCntl0_0_refTimer_x;
reg SdramCntl0_0_writeInProgress_s;
reg [2:0] SdramCntl0_0_state_x;
reg [15:0] SdramCntl0_0_sData_r;
wire [8:0] SdramCntl0_0_col_s;
reg [2:0] SdramCntl0_0_state_r;
wire [15:0] SdramCntl0_0_sData_x;
reg [9:0] SdramCntl0_0_timer_x;
reg [4:0] SdramCntl0_0_wrPipeline_x;
reg [1:0] SdramCntl0_0_wrTimer_x;
reg [4:0] SdramCntl0_0_wrPipeline_r;
reg [15:0] SdramCntl0_0_sdramData_r;
reg [1:0] SdramCntl0_0_wrTimer_r;
reg [9:0] SdramCntl0_0_timer_r;
reg [1:0] SdramCntl0_0_rasTimer_x;
reg [1:0] SdramCntl0_0_rasTimer_r;
reg sdramdevfsm0_0_rand_load;
reg sdramdevfsm0_0_rand_enable;
reg sdramdevfsm0_0_rd_enable;
wire [15:0] sdramdevfsm0_0_rand_val;
reg [1:0] sdramdevfsm0_0_test_state;
reg [26:0] sdramdevfsm0_0_address;
reg sdramdevfsm0_0_wr_enable;
reg sdramdevfsm0_0_error;
reg [15:0] sdramdevfsm0_0_data_delay0_0_1_tmpdata1;
reg [15:0] sdramdevfsm0_0_data_delay0_0_1_tmpdata;
reg [12:0] SdramCntl0_0_activeRow_x [0:4-1];
reg [12:0] SdramCntl0_0_activeRow_r [0:4-1];
reg SdramCntl0_0_activeFlag_x [0:4-1];
reg SdramCntl0_0_activeFlag_r [0:4-1];

 
