################################################################################
##
## Filename: 	sram.txt
##
## Project:	ICO Zip, iCE40 ZipCPU demonsrtation project
##
## Purpose:	Describes how an HDL project needs to be patched to include the
##		SRAM device driver/controller.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2018, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=sdram
@DEVID=SDRAM
@$LGMEMSZ=24
@LGMEMSZ.FORMAT=%d
@$NADDR=(1<<(@$THIS.LGMEMSZ-2))
@$NBYTES=(1<<(@$THIS.LGMEMSZ))
@NBYTES.FORMAT=0x%08x
@ACCESS=@$(DEVID)_ACCESS
@SLAVE.TYPE=MEMORY
@SLAVE.BUS=wb
@LD.PERM=wx
@TOP.PORTLIST=
    sdram_clk,
    sdram_return_clk,
    sdramdev0_Sdcntl_sd_intf_cke,
    sdramdev0_Sdcntl_sd_intf_we,
    sdramdev0_Sdcntl_sd_intf_addr,
    sdramdev0_Sdcntl_sd_intf_dqml,
    sdramdev0_Sdcntl_sd_intf_cas,
    sdramdev0_Sdcntl_sd_intf_dqmh,
    sdramdev0_Sdcntl_sd_intf_ras,
    sdramdev0_Sdcntl_sd_intf_bs,
    sdramdev0_Sdcntl_sd_intf_cs,
    sdramdev0_Sdcntl_sd_intf_dq

@TOP.IODECL=
output sdram_clk;
wire sdram_clk;
input sdram_return_clk;
output sdramdev0_Sdcntl_sd_intf_cke;
reg sdramdev0_Sdcntl_sd_intf_cke;
output sdramdev0_Sdcntl_sd_intf_we;
reg sdramdev0_Sdcntl_sd_intf_we;
output [12:0] sdramdev0_Sdcntl_sd_intf_addr;
reg [12:0] sdramdev0_Sdcntl_sd_intf_addr;
output sdramdev0_Sdcntl_sd_intf_dqml;
reg sdramdev0_Sdcntl_sd_intf_dqml;
output sdramdev0_Sdcntl_sd_intf_cas;
reg sdramdev0_Sdcntl_sd_intf_cas;
output sdramdev0_Sdcntl_sd_intf_dqmh;
reg sdramdev0_Sdcntl_sd_intf_dqmh;
output sdramdev0_Sdcntl_sd_intf_ras;
reg sdramdev0_Sdcntl_sd_intf_ras;
output [1:0] sdramdev0_Sdcntl_sd_intf_bs;
reg [1:0] sdramdev0_Sdcntl_sd_intf_bs;
output sdramdev0_Sdcntl_sd_intf_cs;
reg sdramdev0_Sdcntl_sd_intf_cs;
inout [15:0] sdramdev0_Sdcntl_sd_intf_dq;
wire [15:0] sdramdev0_Sdcntl_sd_intf_dq; 
