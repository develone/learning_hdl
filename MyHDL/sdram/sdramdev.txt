################################################################################
##
## Filename: 	sram.txt
##
## Project:	ICO Zip, iCE40 ZipCPU demonsrtation project
##
## Purpose:	Describes how an HDL project needs to be patched to include the
##		SRAM device driver/controller.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2018, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=sdram
@DEVID=SDRAM
@$LGMEMSZ=24
@LGMEMSZ.FORMAT=%d
@$NADDR=(1<<(@$THIS.LGMEMSZ-2))
@$NBYTES=(1<<(@$THIS.LGMEMSZ))
@NBYTES.FORMAT=0x%08x
@ACCESS=@$(DEVID)_ACCESS
@SLAVE.TYPE=MEMORY
@SLAVE.BUS=wb
@LD.PERM=wx
@TOP.PORTLIST=
	sdram_clk,
	sdram_return_clk,
	sdramdev_SdramCntl0_sd_intf_cke,
	sdramdev_SdramCntl0_sd_intf_we,
	sdramdev_SdramCntl0_sd_intf_addr,
	sdramdev_SdramCntl0_sd_intf_dqml,
	sdramdev_SdramCntl0_sd_intf_cas,
	sdramdev_SdramCntl0_sd_intf_dqmh,
	sdramdev_SdramCntl0_sd_intf_ras,
	sdramdev_SdramCntl0_sd_intf_bs,
	sdramdev_SdramCntl0_sd_intf_cs,
	sdramdev_SdramCntl0_sd_intf_dq

@TOP.MAIN=

@TOP.IODECL=
	output sdram_clk;
	wire sdram_clk;
	input sdram_return_clk;
	output sdramdev_SdramCntl0_sd_intf_cke;
	reg sdramdev_SdramCntl0_sd_intf_cke;
	output sdramdev_SdramCntl0_sd_intf_we;
	reg sdramdev_SdramCntl0_sd_intf_we;
	output [12:0] sdramdev_SdramCntl0_sd_intf_addr;
	reg [12:0] sdramdev_SdramCntl0_sd_intf_addr;
	output sdramdev_SdramCntl0_sd_intf_dqml;
	reg sdramdev_SdramCntl0_sd_intf_dqml;
	output sdramdev_SdramCntl0_sd_intf_cas;
	reg sdramdev_SdramCntl0_sd_intf_cas;
	output sdramdev_SdramCntl0_sd_intf_dqmh;
	reg sdramdev_SdramCntl0_sd_intf_dqmh;
	output sdramdev_SdramCntl0_sd_intf_ras;
	reg sdramdev_SdramCntl0_sd_intf_ras;
	output [1:0] sdramdev_SdramCntl0_sd_intf_bs;
	reg [1:0] sdramdev_SdramCntl0_sd_intf_bs;
	output sdramdev_SdramCntl0_sd_intf_cs;
	reg sdramdev_SdramCntl0_sd_intf_cs;
	inout [15:0] sdramdev_SdramCntl0_sd_intf_dq;
	wire [15:0] sdramdev_SdramCntl0_sd_intf_dq;

@MAIN.PORTLIST=
	master_clk_i,
	sdram_clk_o,
	sdram_clk_i,
    //sdram_clk,
    //sdram_return_clk,
    pb_i,
	i_wb_cyc,
	i_wb_stb,
	i_wb_we,
	i_wb_addr,
	i_wb_data,
	o_wb_ack,
	o_wb_stall,
	o_wb_data,
	i_wb_sel,
	SdramCntl0_0_sd_intf_cke,
	SdramCntl0_0_sd_intf_we,
	SdramCntl0_0_sd_intf_addr,
	SdramCntl0_0_sd_intf_dqml,
	SdramCntl0_0_sd_intf_cas,
	SdramCntl0_0_sd_intf_dqmh,
	SdramCntl0_0_sd_intf_ras,
	SdramCntl0_0_sd_intf_bs,
	SdramCntl0_0_sd_intf_cs,
	SdramCntl0_0_sd_intf_dq,
	sdramdevfsm0_0_host_intf_wr_i,
	sdramdevfsm0_0_host_intf_done_o,
	SdramCntl0_0_host_intf_rdPending_o,
	sdramdevfsm0_0_host_intf_rst_i,
	sdramdevfsm0_0_host_intf_data_i,
	sdramdevfsm0_0_host_intf_data_o,
	sdramdevfsm0_0_host_intf_rd_i,
	sdramdevfsm0_0_host_intf_addr_i
@MAIN.IODECL=
input master_clk_i;
output sdram_clk_o;
wire sdram_clk_o;
input sdram_clk_i;
input pb_i;
input i_wb_cyc;
input i_wb_stb;
input i_wb_we;
input [31:0] i_wb_addr;
input [15:0] i_wb_data;
output o_wb_ack;
reg o_wb_ack;
output o_wb_stall;
reg o_wb_stall;
output [15:0] o_wb_data;
wire [15:0] o_wb_data;
input [3:0] i_wb_sel;
output SdramCntl0_0_sd_intf_cke;
reg SdramCntl0_0_sd_intf_cke;
output SdramCntl0_0_sd_intf_we;
reg SdramCntl0_0_sd_intf_we;
output [12:0] SdramCntl0_0_sd_intf_addr;
reg [12:0] SdramCntl0_0_sd_intf_addr;
output SdramCntl0_0_sd_intf_dqml;
reg SdramCntl0_0_sd_intf_dqml;
output SdramCntl0_0_sd_intf_cas;
reg SdramCntl0_0_sd_intf_cas;
output SdramCntl0_0_sd_intf_dqmh;
reg SdramCntl0_0_sd_intf_dqmh;
output SdramCntl0_0_sd_intf_ras;
reg SdramCntl0_0_sd_intf_ras;
output [1:0] SdramCntl0_0_sd_intf_bs;
reg [1:0] SdramCntl0_0_sd_intf_bs;
output SdramCntl0_0_sd_intf_cs;
reg SdramCntl0_0_sd_intf_cs;
inout [15:0] SdramCntl0_0_sd_intf_dq;
wire [15:0] SdramCntl0_0_sd_intf_dq;
output sdramdevfsm0_0_host_intf_wr_i;
wire sdramdevfsm0_0_host_intf_wr_i;
output sdramdevfsm0_0_host_intf_done_o;
wire sdramdevfsm0_0_host_intf_done_o;
output SdramCntl0_0_host_intf_rdPending_o;
wire SdramCntl0_0_host_intf_rdPending_o;
output sdramdevfsm0_0_host_intf_rst_i;
wire sdramdevfsm0_0_host_intf_rst_i;
output [15:0] sdramdevfsm0_0_host_intf_data_i;
wire [15:0] sdramdevfsm0_0_host_intf_data_i;
output [15:0] sdramdevfsm0_0_host_intf_data_o;
wire [15:0] sdramdevfsm0_0_host_intf_data_o;
output sdramdevfsm0_0_host_intf_rd_i;
wire sdramdevfsm0_0_host_intf_rd_i;
output [23:0] sdramdevfsm0_0_host_intf_addr_i;
wire [23:0] sdramdevfsm0_0_host_intf_addr_i;
@REGS.N=1
@REGS.0= 0 R_@$(DEVID) @$(DEVID)
@REGDEFS.H.DEFNS=
#define	@$(DEVID)BASE	@$(BASEHX)
#define	@$(DEVID)LEN	@$NBYTES

@MAIN.INSERT=
sdramdev sdcntfsm(
    .master_clk_i(i_clk),
    sdram_clk_o,
    sdram_clk_i,
    pb_i,
    .i_wb_cyc(wb_cyc),
    .i_wb_stb(wb_stb),
    .i_wb_we(wb_we),
    .i_wb_addr(wb_addr),
    i_wb_data,
    .o_wb_ack(@$(PREFIX)_ack),
    .o_wb_stall(@$(PREFIX)_stall),
    o_wb_data,
    .i_wb_sel(wb_sel),
    SdramCntl0_0_sd_intf_cke,
    SdramCntl0_0_sd_intf_we,
    SdramCntl0_0_sd_intf_addr,
    SdramCntl0_0_sd_intf_dqml,
    SdramCntl0_0_sd_intf_cas,
    SdramCntl0_0_sd_intf_dqmh,
    SdramCntl0_0_sd_intf_ras,
    SdramCntl0_0_sd_intf_bs,
    SdramCntl0_0_sd_intf_cs,
    SdramCntl0_0_sd_intf_dq,
    sdramdevfsm0_0_host_intf_wr_i,
    sdramdevfsm0_0_host_intf_done_o,
    SdramCntl0_0_host_intf_rdPending_o,
    sdramdevfsm0_0_host_intf_rst_i,
    sdramdevfsm0_0_host_intf_data_i,
    sdramdevfsm0_0_host_intf_data_o,
    sdramdevfsm0_0_host_intf_rd_i,
    sdramdevfsm0_0_host_intf_addr_i
);
